"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
exports.__esModule = true;
exports.makeSendEvents = void 0;
var utils_1 = require("./utils");
function makeSendEvents(requestFn) {
    return function sendEvents(eventData, additionalParams) {
        var _this = this;
        var _a, _b;
        if (this._userHasOptedOut) {
            return;
        }
        var hasCredentials = (!utils_1.isUndefined(this._apiKey) && !utils_1.isUndefined(this._appId)) ||
            (((_a = additionalParams === null || additionalParams === void 0 ? void 0 : additionalParams.headers) === null || _a === void 0 ? void 0 : _a["X-Algolia-Application-Id"]) && ((_b = additionalParams === null || additionalParams === void 0 ? void 0 : additionalParams.headers) === null || _b === void 0 ? void 0 : _b["X-Algolia-API-Key"]));
        if (!hasCredentials) {
            throw new Error("Before calling any methods on the analytics, you first need to call the 'init' function with appId and apiKey parameters or provide custom credentials in additional parameters.");
        }
        if (!this._userToken && this._anonymousUserToken) {
            this.setAnonymousUserToken(true);
        }
        var events = eventData.map(function (data) {
            var _a;
            var filters = data.filters, rest = __rest(data, ["filters"]);
            var payload = __assign(__assign({}, rest), { userToken: (_a = data === null || data === void 0 ? void 0 : data.userToken) !== null && _a !== void 0 ? _a : _this._userToken });
            if (!utils_1.isUndefined(filters)) {
                payload.filters = filters.map(encodeURIComponent);
            }
            return payload;
        });
        return sendRequest(requestFn, this._ua, this._endpointOrigin, events, this._appId, this._apiKey, additionalParams === null || additionalParams === void 0 ? void 0 : additionalParams.headers);
    };
}
exports.makeSendEvents = makeSendEvents;
function sendRequest(requestFn, userAgents, endpointOrigin, events, appId, apiKey, additionalHeaders) {
    if (additionalHeaders === void 0) { additionalHeaders = {}; }
    var providedAppId = additionalHeaders["X-Algolia-Application-Id"], providedApiKey = additionalHeaders["X-Algolia-API-Key"], restHeaders = __rest(additionalHeaders, ["X-Algolia-Application-Id", "X-Algolia-API-Key"]);
    // Auth query
    var headers = __assign({ "X-Algolia-Application-Id": providedAppId !== null && providedAppId !== void 0 ? providedAppId : appId, "X-Algolia-API-Key": providedApiKey !== null && providedApiKey !== void 0 ? providedApiKey : apiKey, "X-Algolia-Agent": encodeURIComponent(userAgents.join("; ")) }, restHeaders);
    var queryParameters = Object.keys(headers)
        .map(function (key) { return key + "=" + headers[key]; })
        .join("&");
    var reportingURL = endpointOrigin + "/1/events?" + queryParameters;
    return requestFn(reportingURL, { events: events });
}
