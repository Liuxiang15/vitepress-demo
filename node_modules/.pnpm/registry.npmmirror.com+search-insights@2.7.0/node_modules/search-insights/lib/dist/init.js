"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __spreadArrays = (this && this.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};
exports.__esModule = true;
exports.init = void 0;
var utils_1 = require("./utils");
var _algoliaAgent_1 = require("./_algoliaAgent");
var objectAssign_1 = require("./polyfills/objectAssign");
var _tokenUtils_1 = require("./_tokenUtils");
objectAssign_1["default"]();
var SUPPORTED_REGIONS = ["de", "us"];
/**
 * Binds credentials and settings to class
 * @param options: initParams
 */
function init(options) {
    var _a, _b;
    if (options === void 0) { options = {}; }
    if (!utils_1.isUndefined(options.region) &&
        SUPPORTED_REGIONS.indexOf(options.region) === -1) {
        throw new Error("optional region is incorrect, please provide either one of: " + SUPPORTED_REGIONS.join(", ") + ".");
    }
    if (!utils_1.isUndefined(options.cookieDuration) &&
        (!utils_1.isNumber(options.cookieDuration) ||
            !isFinite(options.cookieDuration) ||
            Math.floor(options.cookieDuration) !== options.cookieDuration)) {
        throw new Error("optional cookieDuration is incorrect, expected an integer.");
    }
    if (__DEV__) {
        console.info("Since v2.0.4, search-insights no longer validates event payloads.\nYou can visit https://algolia.com/events/debugger instead.");
    }
    setOptions(this, options, {
        _userHasOptedOut: !!options.userHasOptedOut,
        _region: options.region,
        _host: options.host,
        _anonymousUserToken: (_a = options.anonymousUserToken) !== null && _a !== void 0 ? _a : true,
        _useCookie: (_b = options.useCookie) !== null && _b !== void 0 ? _b : false,
        _cookieDuration: options.cookieDuration || 6 * _tokenUtils_1.MONTH
    });
    this._endpointOrigin =
        this._host ||
            (this._region
                ? "https://insights." + this._region + ".algolia.io"
                : "https://insights.algolia.io");
    // user agent
    this._ua = __spreadArrays(_algoliaAgent_1.DEFAULT_ALGOLIA_AGENTS);
    if (options.userToken) {
        this.setUserToken(options.userToken);
    }
    else if (!this._userToken && !this._userHasOptedOut && this._useCookie) {
        this.setAnonymousUserToken();
    }
}
exports.init = init;
function setOptions(target, _a, defaultValues) {
    var partial = _a.partial, options = __rest(_a, ["partial"]);
    if (!partial) {
        Object.assign(target, defaultValues);
    }
    Object.assign(target, Object.keys(options).reduce(function (acc, key) {
        var _a;
        return (__assign(__assign({}, acc), (_a = {}, _a["_" + key] = options[key], _a)));
    }, {}));
}
