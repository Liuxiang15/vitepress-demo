import{_ as s,o as n,c as a,V as o}from"./chunks/framework.3aae2b97.js";const A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"column/6.network/08. 跨域-代理/课件.md","filePath":"column/6.network/08. 跨域-代理/课件.md","lastUpdated":1690463223000}'),p={name:"column/6.network/08. 跨域-代理/课件.md"},l=o(`<p><strong>对于前端开发而言</strong>，大部分的跨域问题，都是通过代理解决的</p><p><strong>代理适用的场景是：生产环境不发生跨域，但开发环境发生跨域</strong></p><p>因此，只需要在开发环境使用代理解决跨域即可，这种代理又称之为开发代理</p><p><img src="http://mdrs.yuanjin.tech/img/20210916125008.png" alt="image-20210916125008693"></p><p>在实际开发中，只需要对开发服务器稍加配置即可完成</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// vue 的开发服务器代理配置</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// vue.config.js</span></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">devServer</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 配置开发服务器</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">proxy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 配置代理</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">/api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 若请求路径以 /api 开头</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">target</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://dev.taobao.com</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// 将其转发到 http://dev.taobao.com</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">};</span></span></code></pre></div>`,6),t=[l];function e(c,r,D,y,i,F){return n(),a("div",null,t)}const _=s(p,[["render",e]]);export{A as __pageData,_ as default};
